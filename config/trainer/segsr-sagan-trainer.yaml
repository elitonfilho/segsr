_target_: trainer.ignite_sagan_trainer.IgniteSaganTrainer
_recursive_: False
optimizer:
  _target_: torch.optim.Adam
  lr: 1e-3
std_noise: 1
num_epochs: 100
batch_size: 9
path_pretrained_seg: '/mnt/data/eliton/results/zoo/pretrained-unet.pt'
path_pretrained_sr: '/mnt/data/eliton/results/zoo/pretrained-sr-sagan.pt'
save_path: checkpoints/
losses:
  l1:
    _target_: losses.L1Loss
    loss_weight: 0.1
  adv:
    _target_: losses.GANLoss
    gan_type: 'vanilla'
    loss_weight: 0.01
  per:
    _target_: losses.PerceptualLoss
    layer_weights: {'conv5_4': 1}
    perceptual_weight: 0.01
  tv:
    _target_: losses.WeightedTVLoss
    loss_weight: 0.001
  seg:
    _target_: losses.SegLoss
    loss_weight: 1.0
    weight_classes: ${dataloader.weight_classes}
validation:
  batch_size: 9
  save_best: 'psnr'
  visualize: True
  freq: 5
  n_saved: 1
metrics:
  train:
    psnr:
      _target_: ignite.metrics.PSNR
      data_range: 1.0
    ssim:
      _target_: ignite.metrics.SSIM
      data_range: 1.0
  val:
    psnr:
      _target_: utils.customMetrics.CustomPSNR #ignite.metrics.PSNR
      data_range: 1.0
    ssim:
      _target_: utils.customMetrics.CustomSSIM #ignite.metrics.SSIM
      data_range: 1.0