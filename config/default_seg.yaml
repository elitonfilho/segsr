# defaults:
#   - hydra/launcher: joblib

mode: train
name: Test1
gpus: [0]
backend: # nccl

dataloader:
  train: 
    _target_: dataloaders.CGEODatasetForSegTask
    path_lr: D:\datasets\cgeoNew\train\train_lr
    path_hr: D:\datasets\cgeoNew\train\train_hr
    path_seg: D:\datasets\cgeoNew\train\train_seg
    augCfg: ${dataloader.augmentation}
  val:
    _target_: dataloaders.CGEODatasetForSegTask
    path_lr: D:\datasets\cgeoNew\val\val_lr
    path_hr: D:\datasets\cgeoNew\val\val_hr
    path_seg: D:\datasets\cgeoNew\val\val_seg
  test:
    _target_: dataloaders.CGEODatasetForSegTask
    path_lr: D:\datasets\cgeoNew\test\test_lr
    path_hr: D:\datasets\cgeoNew\test\test_hr
    path_seg: D:\datasets\cgeoNew\test\test_seg
  # batch_size: 1
  n_classes: &nclass 4
  weight_classes: &wclass [1.,1.,1.,1.,1.]
  prefetch: 1
  num_workers: 1
  pin_memory: False
  drop_last: True
  shuffle: True
  augmentation:
    randomCrop:
      _target_: albumentations.RandomCrop
      height: 256
      width: 256
    verticalFlip:
      _target_: albumentations.VerticalFlip
    horizontalFlip:
      _target_: albumentations.HorizontalFlip
    transpose:
      _target_: albumentations.Transpose
    randomRotate90:
      _target_: albumentations.RandomRotate90
    totensor:
      _target_: albumentations.pytorch.ToTensorV2

archs:
  netSeg:
    _target_: models.model_unet_resnet.UNetResNet
    n_classes: *nclass

trainer:
  _target_: trainer.ignite_trainer_seg.IgniteTrainerSeg
  optimizer:
    _target_: torch.optim.Adam
    lr: 1e-4
  scheduler:
    _target_: torch.optim.lr_scheduler.MultiStepLR
    milestones: [0,10]
    gamma: 0.9
  use_seg: True
  arch_enc: 'unet'
  use_pretrained_seg: True
  path_pretrained_seg: 'epochs/unet-resnet-100.pth'
  use_pretrained_sr: True
  path_pretrained_g: 'epochs/seg1-new-sr-only_g.pth'
  path_pretrained_d: 'epochs/seg1-new-sr-only_d.pth'
  begin_seg: 0.
  num_epochs: 5
  scheduler_milestones: [50,100,150,200]
  scheduler_gamma: 0.1
  batch_size: 4
  crop_size: 256
  upscale_factor: 4
  lr: 1e-3
  save_path: outputs/${name}
  use_aug: True
  losses: 
    cee:
      _target_: torch.nn.CrossEntropyLoss
  validation:
    batch_size: 1
    save_best: 'psnr'
    visualize: True
    freq: 1
    n_saved: 3
  metrics:
    train:
      psnr:
        _target_: utils.customMetrics.CustomPSNR
        data_range: 1.0
      ssim:
        _target_: utils.customMetrics.CustomSSIM
        data_range: 1.0
    val:
      psnr:
        _target_: utils.customMetrics.CustomPSNR #ignite.metrics.PSNR
        data_range: 1.0
      ssim:
        _target_: utils.customMetrics.CustomSSIM #ignite.metrics.SSIM
        data_range: 1.0
    

test:
  batch_size: 1
  upscale_factor: 4
  path_encoder: 'epochs/200_noseg_encoder.pth'
  path_image: 'data/LR/2953-3-SO_1_LR.png'
  path_save: 'results/test'
  prefix_save: 'seg'

